/*
 2018 Tom Weatherhead <null@2hrd4u.org> (https://httpbin.org/status/418)
 @version 0.0.1
*/
"use strict";/**
 * thaw-common-utilities.js
 *
 * @copyright 2018 Tom Weatherhead <null@2hrd4u.org> (https://httpbin.org/status/418)
 * @license MIT
 * @version 0.0.1
 */// @tom-weatherhead/common-utilities.js/src/main.js
'use strict';// **** Type Utilities ****
export function getTypeString(a){return Object.prototype.toString.call(a)}// **** Object utilities ****
export function clone(a){return JSON.parse(JSON.stringify(a))}export function isDefined(a){return'undefined'!=typeof a}export function copySpecifiedObjectProperties(a,b,c={}){return a.forEach(a=>{isDefined(b[a])&&(c[a]=b[a])}),c}export function getOwnProperties(a={}){// See https://stackoverflow.com/questions/208016/how-to-list-the-properties-of-a-javascript-object
let b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(c);return b}// **** Numeric utilities ****
export function generateRange(a,b){let c=[];for(;a<=b;)c.push(a),a++;return c}export function generateFirstNNaturalNumbers(a){return generateRange(1,a)}export function replicateString(a,b){return generateFirstNNaturalNumbers(b).reduce(// (accumulator, i) => accumulator + str,
b=>b+a,'')}export function zeroPadNumber(a,b){return(replicateString('0',b)+a).slice(-b)}// **** Date Utilities ****
export function getDateTimeString(a){const b=getTypeString(a);// console.log('getDateTimeString() : Type of date parameter is', typeStringOfParam);
// See https://stackoverflow.com/questions/10073699/pad-a-number-with-leading-zeros-in-javascript
// ('000' + num).slice(-4)
// return `${date.getFullYear()}-${('0' + (date.getMonth() + 1)).slice(-2)}-${('0' + date.getDate()).slice(-2)} ${('0' + date.getHours()).slice(-2)}:${('0' + date.getMinutes()).slice(-2)}:${('0' + date.getSeconds()).slice(-2)}`;
return a&&'[object Date]'===b||(a=new Date),`${a.getFullYear()}-${zeroPadNumber(a.getMonth()+1,2)}-${zeroPadNumber(a.getDate(),2)} ${zeroPadNumber(a.getHours(),2)}:${zeroPadNumber(a.getMinutes(),2)}:${zeroPadNumber(a.getSeconds(),2)}`}// **** Array Utilities ****
export function insertNumberIntoArray(a,b){// array must already be sorted in non-descending order.
let c=b.findIndex(b=>b>=a);0>c&&(c=b.length);let d=clone(b);// Array.splice modifies the array in place. See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice
return d.splice(c,0,a),d}export function insertionSort(a){return a.reduce((a,b)=>insertNumberIntoArray(b,a),[])}export function removeDuplicatesFromArray(a){// See the discussion at https://gist.github.com/telekosmos/3b62a31a5c43f40849bb
// JavaScript Set: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set
// See https://stackoverflow.com/questions/13486479/how-to-get-an-array-of-unique-values-from-an-array-containing-duplicates-in-java
// Discussion about performace: See https://medium.com/@jakubsynowiec/unique-array-values-in-javascript-7c932682766c
// return [...new Set(array)]; // Yes. Requires ES6, since it uses the "spread" operator ("...").
// return Array.from(new Set(array)); // Yes
// array.includes() does not exist.
return a.reduce((a,b)=>a.includes(b)?a:[...a,b],[]);// Yes. From svnpenn.
}
//# sourceMappingURL=common-utilities.es6.min.js.map